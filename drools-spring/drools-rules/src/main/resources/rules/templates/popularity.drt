template header
low
mid
high

package rules.templates;
import game.helper.model.*;
import game.helper.model.enums.*;
import game.helper.model.dto.*;


template "popularity"

rule "UpperLowerSort"
	agenda-group "parameters"
	salience 0
	lock-on-active
    when
    	$l: ListGameResultDTO($list: list) 
    then
    	System.out.println("EVO ME USAO SAM SORT: ");
        $l.sortIt();
        $l.updateRankings();
        update($l);
end

rule "Upper"
	agenda-group "parameters"
	salience -1
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(rank <= $list.size/2) from $list
    then
    	System.out.println("EVO ME SORTIRANO UPPER: " + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" rank: " + $g.getRank());
		$g.setUpperOrLower(1);
end


rule "Lower"
	agenda-group "parameters"
	salience -1
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(rank > $list.size/2) from $list
    then
    	System.out.println("EVO ME SORTIRANO LOWER: " + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" rank: " + $g.getRank());
		$g.setUpperOrLower(2);
end

rule "NumberOfReviews<Low"
	agenda-group "parameters"
	salience -2
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(game.reviews.size <= @{low}) from $$list
    then
    	System.out.println("EVO ME SORTIRANO NumberOfReviews<Low:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setReviewq(1);
end

rule "NumberOfReviews<Mid"
	agenda-group "parameters"
	salience -2
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(game.reviews.size <= @{mid} && game.reviews.size > @{low}) from $$list
    then
    	System.out.println("EVO ME SORTIRANO NumberOfReviews<Mid:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setReviewq(2);
end

rule "NumberOfReviews<High"
	agenda-group "parameters"
	salience -2
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(game.reviews.size <= @{high} && game.reviews.size > @{mid}) from $$list
    then
    	System.out.println("EVO ME SORTIRANO NumberOfReviews<High:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setReviewq(3);
end

rule "NumberOfReviews>High"
	agenda-group "parameters"
	salience -2
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(game.reviews.size > @{high}) from $$list
    then
    	System.out.println("EVO ME SORTIRANO NumberOfReviews>High:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setReviewq(4);
end

rule "Calculate Grade"
	agenda-group "parameters"
	salience -3
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO() from $list
        accumulate(
        	(Review($score: score) from $g.game.reviews),
        	$grade: average($score)
        )
    then
    	System.out.println("DAJEM GRADE:" + $grade);
		$g.setGrade($grade);
end

rule "FormulaUpper"
	agenda-group "parameters"
	salience -4
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(upperOrLower == 1) from $list
    then
    	System.out.println("EVO ME SORTIRANO FROMULA UPPER:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setPoints($g.getPoints() +  $g.getReviewq()*$g.getGrade());
end

rule "FormulaLower"
	agenda-group "parameters"
	salience -4
	lock-on-active
    when
    	ListGameResultDTO($list: list) 
        $g: GameResultDTO(upperOrLower == 2) from $list
    then
    	System.out.println("EVO ME SORTIRANO FROMULA LOWER:" + $g.getGame().getName() + "broj bodova: " + $g.getPoints() +" size: " + $g.getGame().getReviews().size());
		$g.setPoints($g.getPoints() + ($g.getReviewq()*$g.getGrade())/2);
end

end template